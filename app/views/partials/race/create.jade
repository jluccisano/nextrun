div.container
	h3 Création d'une manifestation
	div.row
		div.col-lg-12
			tabset(horizontal="true" type="navType")
				tab(heading="Informations" active="tabs[0].active" disabled="tabs[0].disabled")
					div.container
						div.row
							div.col-lg-6.col-lg-offset-2
								form.form-horizontal(role="form", name="form", novalidate, style="margin-top:50px")
									div.form-group(data-ng-class="{'has-error': !form.name.$pristine && form.name.$invalid, 'has-success': !form.name.$invalid && !form.name.$pristine}")
										label.control-label(for="name") Nom
										input.form-control(name="name", id="name", placeholder="ex: Triathlon de Paris",data-ng-model="race.name", required)
									
									div.form-group(data-ng-class="{'has-error': !form.date.$pristine && form.date.$invalid, 'has-success': !form.date.$invalid && !form.date.$pristine}")
										label.control-label(for="date") Date
										div(class="dropdown" data-ng-class="{'has-error': !form.date.$pristine && form.date.$invalid, 'has-success': !form.date.$invalid && !form.date.$pristine}")
											a(class="dropdown-toggle my-toggle-select" id="dLabel" role="button" data-toggle="dropdown" data-target="#" href="#")
												div(class="input-group")
													input.form-control(name="date" type="text" data-ng-model="race.date" data-date-time-input="DD MMMM YYYY" placeholder="Date" required)
													span.input-group-addon
														i.glyphicon.glyphicon-calendar
											ul(class="dropdown-menu" role="menu" aria-labelledby="dLabel")
												datetimepicker(data-ng-model="race.date"  data-datetimepicker-config="{ dropdownSelector: '.my-toggle-select', startView:'month', minView:'day' }")
											
									div.form-group(data-ng-class="{'has-error': !form.location.$pristine && form.location.$invalid, 'has-success': !form.location.$invalid && !form.location.$pristine}")
										label.control-label(for="location") Lieu
										input.form-control(name="location", id="location", placeholder="ex: Castelnaudary",data-ng-model="race.pin.name", required, hasLocation ng-autocomplete options="options" details="details")

									div.form-group(data-ng-class="{'has-error': !form.department.$pristine && form.department.$invalid, 'has-success': !form.department.$invalid && !form.department.$pristine}")
										label.control-label(for="department") Département
										select.form-control(data-ng-model="race.department", name="department" data-ng-options="department.value as getDepartment(department.value) for department in departments" required)
											option(value="") Sélectionner...
											
									div.form-group(data-ng-class="{'has-error': !form.type.$pristine && form.type.$invalid, 'has-success': !form.type.$invalid && !form.type.$pristine}")
										label.control-label(for="type") Type
										select.form-control(data-ng-model="race.type", name="type", data-ng-options="type.value as getType(type.value) for type in types", required, data-ng-change="onChange()")
											option(value="") Sélectionner...

									div.form-group(data-ng-class="{'has-error': !form.distanceType.$pristine && form.distanceType.$invalid, 'has-success': !form.distanceType.$invalid && !form.distanceType.$pristine}")
										label.control-label(for="distanceType") Distance
										select.form-control(data-ng-model="race.distanceType", name="distanceType", data-ng-options="distance.i18n for distance in distances", required)
											option(value="") Sélectionner...

									button.btn.btn-primary(data-ng-click="submit()", data-ng-disabled="form.$invalid") Continuer
				tab(heading="Confirmation" data-ng-hide="isLoggedIn()" active="tabs[1].active" disabled="tabs[1].disabled")
					div(data-ng-show="accountExists")
						div.container(style="margin-top:50px")
							div.row
								div.col-lg-4.col-lg-offset-4
									div.panel.panel-default
										div.panel-heading <strong>Se connecter</strong>
										div.panel-body
											form(role="form", name="form1", novalidate)
												div.form-group(data-ng-class="{'has-error': !form1.email.$pristine && form1.email.$invalid, 'has-success': !form1.email.$invalid && !form1.email.$pristine}")
													label.control-label(for="email") Email
													input.form-control(type="email", name="email", id="email", placeholder="Email",data-ng-model="user.email")
													span.help-block(data-ng-show="form1.email.$dirty && form1.email.$error.required") Veuillez saisir votre email
													span.help-block(data-ng-show="form1.email.$error.email") Email invalide
												div.form-group(data-ng-class="{'has-error': !form1.password.$pristine && form1.password.$invalid, 'has-success': !form1.password.$invalid && !form1.password.$pristine}")
													label.control-label(type="password", for="password") Mot de passe
													input.form-control(type="password", name="password",  id="password", placeholder="Mot de passe",data-ng-model="user.password",  ng-minlength="4", ng-maxlength="8", required)
													span.help-block(data-ng-show="form1.password.$dirty && form1.password.$error.required") Please enter a password
													span.help-block(data-ng-show="form1.password.$dirty && form1.password.$error.minlength") Votre mot de passe doit contenir entre 4 et 8 caractères
													span.help-block(data-ng-show="form1.password.$dirty && form1.password.$error.maxlength") Votre mot de passe doit contenir entre 4 et 8 caractères
												button.btn.btn-primary(type="submit", data-ng-click="login()", data-ng-disabled="form1.$invalid") Se connecter
												button.btn.btn-link( type="button", data-ng-click="accountExists = false;form1.$setPristine();user={}") S'inscrire
												hr
												button.btn.btn-link(id="forgotPasswordLink", type="button",  data-ng-click="open()") Mot de passe oublié ?
					div(data-ng-hide="accountExists")
						div.container(style="margin-top:50px")
							div.row
								div.col-lg-4.col-lg-offset-4
									div.panel.panel-default
										div.panel-heading <strong>S'inscrire</strong>
										div.panel-body
											form(role="form", name="form2", novalidate)
												div.form-group(ng-class="{'has-error': !form2.username.$pristine && form2.username.$invalid, 'has-success': !form2.username.$invalid && !form2.username.$pristine}")
													label.control-label(for="username") Nom complet
													input.form-control(type="text", name="username", id="username", placeholder="Nom complet",data-ng-model="newuser.username",  ng-minlength="4", ng-maxlength="30", required)
													span.help-block(ng-show="form2.username.$dirty && form2.username.$error.required") Please choose a username
													span.help-block(ng-show="form2.username.$dirty && form2.username.$error.invalidChars") Username may not contain any non-url-safe characters
													span.help-block(data-ng-show="form2.username.$dirty && form2.username.$error.minlength") Votre nom doit contenir entre 4 et 30 caractères
													span.help-block(data-ng-show="form2.username.$dirty && form2.username.$error.maxlength") Votre nom doit contenir entre 4 et 30 caractères
												div.form-group(ng-class="{'has-error': !form2.email.$pristine && form2.email.$invalid, 'has-success': !form2.email.$invalid && !form2.email.$pristine}")
													label.control-label(for="email") Email
													input.form-control(type="email", name="email", id="email", placeholder="Email", unique-email, data-ng-model="newuser.email", required)
													span.help-block(ng-show="form2.email.$dirty && form2.email.$error.required") Veuillez saisir votre email
													span.help-block(ng-show="form2.email.$error.email") Email invalide
													span.help-block(ng-show="form2.email.$dirty && form2.email.$error.isTaken") Cette adresse email est déjà prise
												div.form-group(ng-class="{'has-error': !form2.password.$pristine && form2.password.$invalid, 'has-success': !form2.password.$invalid && !form2.password.$pristine}")
													label.control-label(type="password", for="password") Mot de passe
													input.form-control(type="password", name="password",  id="password", placeholder="Mot de passe",data-ng-model="newuser.password",  required, match="newuserconfirmPassword", ng-minlength="4", ng-maxlength="8")
													span.help-block(ng-show="form2.password.$dirty && form2.password.$error.required") Please enter a password
													span.help-block(data-ng-show="form2.password.$dirty && form2.password.$error.minlength") Votre mot de passe doit contenir entre 4 et 8 caractères
													span.help-block(data-ng-show="form2.password.$dirty && form2.password.$error.maxlength") Votre mot de passe doit contenir entre 4 et 8 caractères
												div.form-group(ng-class="{'has-error': !form2.newuserconfirmPassword.$pristine && form2.newuserconfirmPassword.$invalid, 'has-success': !form2.newuserconfirmPassword.$error.match && !form2.newuserconfirmPassword.$pristine}")
													label.control-label(for="newuserconfirmPassword") Confirmer le mot de passe
													input.form-control(type="password", name="newuserconfirmPassword", placeholder="Confirmer le mot de passe", required, match="newuserconfirmPassword",data-ng-model="newuserconfirmPassword"))
													span.help-block(ng-show="form2.newuserconfirmPassword.$dirty && form2.newuserconfirmPassword.$error.required") Please repeat your password
													span.help-block(ng-show="form2.newuserconfirmPassword.$dirty && form2.newuserconfirmPassword.$error.match && !form2.newuserconfirmPassword.$error.required") Passwords don't match
												div.alert.alert-danger.fade.hide(ng-show="message")
												button.btn.btn-primary(type="submit", ng-click="signup()", ng-disabled="form2.$invalid") Envoyer
												button.btn.btn-link(type="button", data-ng-click="accountExists = true;form2.$setPristine();newuser = {}") Déjà inscrit?